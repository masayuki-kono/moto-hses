# Integration Test Configuration for moto-hses
# This file defines expected outputs for integration tests

[tests.variable_operations]
command = "variable_operations"
port = "10040"
description = "Test variable operations (I16, I32, R, B variables)"

[[tests.variable_operations.expected_outputs]]
type = "connection"
pattern = "✓ Successfully connected to controller"
description = "Variable operations connection"

[[tests.variable_operations.expected_outputs]]
type = "read_i16"
pattern = "✓ I000 ="
description = "Read 16-bit integer variable"

[[tests.variable_operations.expected_outputs]]
type = "read_i32"
pattern = "✓ D000 ="
description = "Read 32-bit integer variable"

[[tests.variable_operations.expected_outputs]]
type = "read_f32"
pattern = "✓ R000 ="
description = "Read float variable"

[[tests.variable_operations.expected_outputs]]
type = "read_u8"
pattern = "✓ B000 ="
description = "Read byte variable"

[[tests.variable_operations.expected_outputs]]
type = "write_i16"
pattern = "✓ Wrote 42 to I001"
description = "Write 16-bit integer variable"

[[tests.variable_operations.expected_outputs]]
type = "write_i32"
pattern = "✓ Wrote 12345 to D002"
description = "Write 32-bit integer variable"

[[tests.variable_operations.expected_outputs]]
type = "write_f32"
pattern = "✓ Wrote π to R003"
description = "Write float variable"

[[tests.variable_operations.expected_outputs]]
type = "write_u8"
pattern = "✓ Wrote 255 to B004"
description = "Write byte variable"

[[tests.variable_operations.expected_outputs]]
type = "verify_i16"
pattern = "✓ I001 = 42"
description = "Verify 16-bit integer write"

[[tests.variable_operations.expected_outputs]]
type = "verify_i32"
pattern = "✓ D002 = 12345"
description = "Verify 32-bit integer write"

[[tests.variable_operations.expected_outputs]]
type = "verify_f32"
pattern = "✓ R003 = 3.1415927"
description = "Verify float write"

[[tests.variable_operations.expected_outputs]]
type = "verify_u8"
pattern = "✓ B004 = 255"
description = "Verify byte write"

[[tests.variable_operations.expected_outputs]]
type = "read_string_empty"
pattern = "✓ S000 = ''"
description = "Read empty string variable"

[[tests.variable_operations.expected_outputs]]
type = "write_string_1"
pattern = "✓ Wrote 'Hello, Robot!' to S000"
description = "Write string variable 1"

[[tests.variable_operations.expected_outputs]]
type = "verify_string_1"
pattern = "✓ S000 = 'Hello, Robot!'"
description = "Verify string variable write 1 (clean string without null padding)"

[[tests.variable_operations.expected_outputs]]
type = "write_string_2"
pattern = "✓ Wrote 'Test String 123' to S001"
description = "Write string variable 2"

[[tests.variable_operations.expected_outputs]]
type = "verify_string_2"
pattern = "✓ S001 = 'Test String 123'"
description = "Verify string variable write 2 (clean string without null padding)"

[[tests.variable_operations.expected_outputs]]
type = "error_handling"
pattern = "✓ Invalid variable index correctly failed"
description = "Invalid variable index should fail"

[[tests.variable_operations.expected_outputs]]
type = "string_error_handling"
pattern = "✓ Invalid string variable index correctly failed"
description = "Invalid string variable index should fail"

[[tests.variable_operations.expected_outputs]]
type = "completion"
pattern = "Variable Operations Example completed successfully"
description = "Variable operations completion"

[tests.position_operations]
command = "position_operations"
port = "10040"
description = "Test position operations"

[[tests.position_operations.expected_outputs]]
type = "connection"
pattern = "✓ Successfully connected to controller"
description = "Position operations connection"

[[tests.position_operations.expected_outputs]]
type = "robot_pulse"
pattern = "✓ Robot pulse position read successfully"
description = "Read robot pulse position"

[[tests.position_operations.expected_outputs]]
type = "base_pulse"
pattern = "✓ Base pulse position read successfully"
description = "Read base pulse position"

[[tests.position_operations.expected_outputs]]
type = "station_pulse"
pattern = "✓ Station pulse position read successfully"
description = "Read station pulse position"

[[tests.position_operations.expected_outputs]]
type = "robot_cartesian"
pattern = "✓ Robot cartesian position read successfully"
description = "Read robot cartesian position"

[[tests.position_operations.expected_outputs]]
type = "r1_position"
pattern = "✓ R1 position read successfully"
description = "Read R1 position"

[[tests.position_operations.expected_outputs]]
type = "r2_position"
pattern = "✓ R2 position read successfully"
description = "Read R2 position"

[[tests.position_operations.expected_outputs]]
type = "b1_position"
pattern = "✓ B1 position read successfully"
description = "Read B1 position"

[[tests.position_operations.expected_outputs]]
type = "b2_position"
pattern = "✓ B2 position read successfully"
description = "Read B2 position"

[[tests.position_operations.expected_outputs]]
type = "monitoring"
pattern = "Monitoring position for 5 seconds"
description = "Position monitoring"

[[tests.position_operations.expected_outputs]]
type = "completion"
pattern = "Position Operations Example completed successfully"
description = "Position operations completion"

[tests.alarm_operations]
command = "alarm_operations"
port = "10040"
description = "Test alarm operations"

[[tests.alarm_operations.expected_outputs]]
type = "complete_alarm"
pattern = "✓ Complete alarm data read successfully"
description = "Complete alarm data reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_code"
pattern = "✓ Alarm code: 1001"
description = "Alarm code reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_data"
pattern = "✓ Alarm data: 1"
description = "Alarm data reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_type"
pattern = "✓ Alarm type: 1"
description = "Alarm type reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_time"
pattern = "✓ Alarm time: 2024/01/01 12:00"
description = "Alarm time reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_name"
pattern = "✓ Alarm name: Servo Error"
description = "Alarm name reading"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_instance_1"
pattern = "✓ Alarm instance 1: Code=1001, Name=Servo Error"
description = "Alarm instance 1"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_instance_2"
pattern = "✓ Alarm instance 2: Code=2001, Name=Emergency Stop"
description = "Alarm instance 2"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_history_1"
pattern = "✓ Major failure alarm 1: Code=1001, Name="
description = "Alarm history - Major failure alarm 1"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_history_2"
pattern = "✓ Monitor alarm 1001: No alarm"
description = "Alarm history - Monitor alarm 1001"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_history_code"
pattern = "✓ Major failure alarm #1 code: 1001"
description = "Alarm history - Code attribute"

[[tests.alarm_operations.expected_outputs]]
type = "alarm_history_time"
pattern = "✓ Major failure alarm #1 time: 2024/01/01 12:00"
description = "Alarm history - Time attribute"

[[tests.alarm_operations.expected_outputs]]
type = "invalid_instance"
pattern = "✓ Invalid instance correctly returned empty data"
description = "Alarm history - Invalid instance handling"

[[tests.alarm_operations.expected_outputs]]
type = "completion"
pattern = "Alarm operations example completed successfully"
description = "Alarm operations completion"

[tests.connection_management]
command = "connection_management"
port = "10040"
description = "Test connection management"

[[tests.connection_management.expected_outputs]]
type = "connection"
pattern = "✓ Successfully connected"
description = "Connection management"

[tests.read_status]
command = "read_status"
port = "10040"
description = "Test read status"

[[tests.read_status.expected_outputs]]
type = "connection"
pattern = "Successfully connected to controller"
description = "Read status connection"

[[tests.read_status.expected_outputs]]
type = "execution"
pattern = "Complete status information retrieved"
description = "Read status execution"

[[tests.read_status.expected_outputs]]
type = "data1"
pattern = "Data1 retrieved"
description = "Read status data1"

[[tests.read_status.expected_outputs]]
type = "data2"
pattern = "Data2 retrieved"
description = "Read status data2"

[[tests.read_status.expected_outputs]]
type = "result"
pattern = "Running: true"
description = "Read status result"

[tests.read_executing_job_info]
command = "read_executing_job_info"
port = "10040"
description = "Test read executing job info (0x73 command)"

[[tests.read_executing_job_info.expected_outputs]]
type = "connection"
pattern = "Connecting to controller at"
description = "Read executing job info connection"

[[tests.read_executing_job_info.expected_outputs]]
type = "complete"
pattern = "Complete job information:"
description = "Read executing job info complete"

[[tests.read_executing_job_info.expected_outputs]]
type = "job_name"
pattern = "Job name: TEST.JOB"
description = "Read executing job info job name"

[[tests.read_executing_job_info.expected_outputs]]
type = "line_number"
pattern = "Line number: 1000"
description = "Read executing job info line number"

[[tests.read_executing_job_info.expected_outputs]]
type = "step_number"
pattern = "Step number: 1"
description = "Read executing job info step number"

[[tests.read_executing_job_info.expected_outputs]]
type = "speed_override"
pattern = "Speed override value: 100"
description = "Read executing job info speed override"

[[tests.read_executing_job_info.expected_outputs]]
type = "task_types"
pattern = "Master Task (1): TEST.JOB"
description = "Read executing job info task types"

[tests.io_operations]
command = "io_operations"
port = "10040"
description = "Test I/O operations (0x78 command)"

[[tests.io_operations.expected_outputs]]
type = "connection"
pattern = "Connected successfully!"
description = "I/O operations connection"

[[tests.io_operations.expected_outputs]]
type = "io_read_1"
pattern = "I/O #1 state:"
description = "Read robot user input I/O #1"

[[tests.io_operations.expected_outputs]]
type = "io_read_1001"
pattern = "I/O #1001 state:"
description = "Read robot user output I/O #1001"

[[tests.io_operations.expected_outputs]]
type = "io_write_1001"
pattern = "Successfully set I/O #1001 to ON"
description = "Write to robot user output I/O #1001"

[[tests.io_operations.expected_outputs]]
type = "io_verify_1001"
pattern = "I/O #1001 state after write:"
description = "Verify I/O #1001 write operation"

[[tests.io_operations.expected_outputs]]
type = "io_read_2"
pattern = "I/O #2 state:"
description = "Read additional I/O #2"

[[tests.io_operations.expected_outputs]]
type = "io_write_1002"
pattern = "Successfully set I/O #1002 to OFF"
description = "Write to I/O #1002"

[[tests.io_operations.expected_outputs]]
type = "error_handling"
pattern = "✓ Invalid I/O number correctly failed"
description = "Invalid I/O number should fail"

[[tests.io_operations.expected_outputs]]
type = "completion"
pattern = "I/O operations completed."
description = "I/O operations completion"

[tests.register_operations]
command = "register_operations"
port = "10040"
description = "Test register operations (0x79 command)"

[[tests.register_operations.expected_outputs]]
type = "connection"
pattern = "Connected to mock server"
description = "Register operations connection"

[[tests.register_operations.expected_outputs]]
type = "read_register_0"
pattern = "Register 0 value:"
description = "Read register 0"

[[tests.register_operations.expected_outputs]]
type = "write_register_0"
pattern = "Write successful"
description = "Write to register 0"

[[tests.register_operations.expected_outputs]]
type = "verify_register_0"
pattern = "Register 0 value after write: 42"
description = "Verify register 0 write operation"

[[tests.register_operations.expected_outputs]]
type = "test_register_1"
pattern = "✓ Register 1 test passed"
description = "Test register 1 operations"

[[tests.register_operations.expected_outputs]]
type = "test_register_2"
pattern = "✓ Register 2 test passed"
description = "Test register 2 operations"

[[tests.register_operations.expected_outputs]]
type = "test_register_3"
pattern = "✓ Register 3 test passed"
description = "Test register 3 operations"

[[tests.register_operations.expected_outputs]]
type = "test_register_4"
pattern = "✓ Register 4 test passed"
description = "Test register 4 operations"

[[tests.register_operations.expected_outputs]]
type = "completion"
pattern = "Register operations example completed!"
description = "Register operations completion"

[tests.file_operations]
command = "file_operations"
port = "10041"
optional = true
description = "Test file operations (optional)"

[[tests.file_operations.expected_outputs]]
type = "success"
pattern = "✓"
description = "File operations"
